help
dir
ls
clear
x <- 1:10
if(x<5){x <-0}
f(5)
source myF1.r
souce("myF1.r")
source('~/MyStuff/Coursera/R-Work/myF2.r')
f(3)
z <- 10
f(3)
install.packages("KernSmooth")
library(KernSmooth)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source(submitscript1.r)
library()
source(submitscript1.r)
read.csv('C:\Users\kerezy\Documents\MyStuff\Coursera\R-Work\Week 2 Assignment\319.csv')
read.csv('C:\\Users\\kerezy\\Documents\\MyStuff\\Coursera\\R-Work\\Week 2 Assignment\\319.csv')
read.csv('C:\\Users\\kerezy\\Documents\\MyStuff\\Coursera\\R-Work\\Week 2 Assignment\\Data\\319.csv')
x <- read.csv('C:\\Users\\kerezy\\Documents\\MyStuff\\Coursera\\R-Work\\Week 2 Assignment\\Data\\319.csv')
print(x)
myMatrix <- matrix(a=1:4, b=5:9)
myMatrix <- matrix(1:9, nrow=4, ncol=2)
myMatrix <- matrix(1:8, nrow=4, ncol=2)
myMatrix
colSums(myMatrix[ ,1])
? colSums()
colSums(myMatrix, 1)
myDF <- data.frame(1:8, nrow=4, ncol=2)
myDF
colSums(myDF, 2)
range(myMatrix, $nrow)
message("Yo baby")
library(datasets)
data(iris)
iris
? colmeans()
? colmean()
? colMeans()
testSplit <- split(iris, $Species)
testSplit <- split(iris, iris$Species)
testSplit
newDF <- testSplit$virginica
newDF
vMeans < - colMeans(newDF)
vMeans <- colMeans(newDF)
class(newDF)
x <- (newDF$Septal.Length)
x
x <- c(newDF$Spetal.Length)
x
rm(x)
sapply(newDF, colMeans())
sapply(testSplit$virginica, colMeans())
class(testSplit)
testSplit$virginica
lapply(testSplit$virginica, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[ , 1:4], 2, mean)
apply(newDF[ , 1:4], 2, mean)
rm(newDF)
rm(testSplit)
rm(iris)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
?abs()
abs((26.66364 - 15.10000))
setwd("C:/Users/kerezy/Coursera/ProgrammingAssignment2")
source(cacheMatrix.r)
source(cachematrix.r)
ls
source(cachematrix.R)
source(cachematrix.R)
setwd("C:/Users/kerezy/Coursera/ProgrammingAssignment2")
source('C:/Users/kerezy/Coursera/ProgrammingAssignment2/cachematrix.R')
coolM <- matrix(5:8, nrow=2, ncol=2)
y <- makeCacheMatrix(coolM)
y$get()
z <- cacheSolve(y)
z
yO <- cacheSolve(y)
source('C:/Users/kerezy/Coursera/ProgrammingAssignment2/cachematrix.R')
